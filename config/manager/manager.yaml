apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      hostNetwork: true
      hostPID: true
      securityContext:
        runAsNonRoot: false
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command: ['/bin/sh', '-c', 'mount bpffs /sys/fs/bpf -t bpf && /manager --leader-elect --enable-webhook']
      #- command: ['/bin/sh', '-c', 'mount bpffs /sys/fs/bpf -t bpf && strace -fe trace=bpf /manager --leader-elect']
       # - command:
       #   - /manager
       #   args:
       #   - --leader-elect
        image: controller:latest
        name: manager
        securityContext:
          privileged: true
          runAsUser: 0
        # allowPrivilegeEscalation: false
        # TODO(user): uncomment for common cases that do not require escalating privileges
        #  capabilities:
        #    drop:
        #      - "ALL"
        #    add: ["CAP_BPF", "CAP_NET_ADMIN"]
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      volumes:
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
